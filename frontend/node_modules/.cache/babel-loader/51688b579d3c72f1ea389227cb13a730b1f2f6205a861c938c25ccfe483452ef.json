{"ast":null,"code":"import config from '../config/frontend_config.json';\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\n/**\r\n * Fetches the list of available Bible translations.\r\n * @returns {Promise} A promise resolving to the list of Bibles.\r\n */\nexport async function listBibles() {\n  const response = await fetch(`${BASE_URL}/bibles`);\n  if (!response.ok) {\n    throw new Error(`Failed to fetch bibles: ${response.statusText}`);\n  }\n  return response.json();\n}\n\n/**\r\n * Fetches the content of a specific Bible translation.\r\n * @param {string} version - The version ID of the Bible to fetch.\r\n * @returns {Promise} A promise resolving to the Bible content.\r\n */\nexport async function getBible(version) {\n  const response = await fetch(`${BASE_URL}/bibles/${version}`);\n  if (!response.ok) {\n    throw new Error(`Failed to fetch Bible version '${version}': ${response.statusText}`);\n  }\n  return response.json();\n}","map":{"version":3,"names":["config","BASE_URL","process","env","REACT_APP_API_BASE_URL","listBibles","response","fetch","ok","Error","statusText","json","getBible","version"],"sources":["C:/bible/frontend/src/api.js"],"sourcesContent":["import config from '../config/frontend_config.json';\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\n/**\r\n * Fetches the list of available Bible translations.\r\n * @returns {Promise} A promise resolving to the list of Bibles.\r\n */\r\nexport async function listBibles() {\r\n    const response = await fetch(`${BASE_URL}/bibles`);\r\n    if (!response.ok) {\r\n        throw new Error(`Failed to fetch bibles: ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n}\r\n\r\n/**\r\n * Fetches the content of a specific Bible translation.\r\n * @param {string} version - The version ID of the Bible to fetch.\r\n * @returns {Promise} A promise resolving to the Bible content.\r\n */\r\nexport async function getBible(version) {\r\n    const response = await fetch(`${BASE_URL}/bibles/${version}`);\r\n    if (!response.ok) {\r\n        throw new Error(`Failed to fetch Bible version '${version}': ${response.statusText}`);\r\n    }\r\n    return response.json();\r\n}"],"mappings":"AAAA,OAAOA,MAAM,MAAM,gCAAgC;AAEnD,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;;AAEnD;AACA;AACA;AACA;AACA,OAAO,eAAeC,UAAUA,CAAA,EAAG;EAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,SAAS,CAAC;EAClD,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,2BAA2BH,QAAQ,CAACI,UAAU,EAAE,CAAC;EACrE;EACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeC,QAAQA,CAACC,OAAO,EAAE;EACpC,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,QAAQ,WAAWY,OAAO,EAAE,CAAC;EAC7D,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,kCAAkCI,OAAO,MAAMP,QAAQ,CAACI,UAAU,EAAE,CAAC;EACzF;EACA,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}